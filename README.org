#+TITLE:     Managing Dotfiles
#+AUTHOR:    Fabrice Niessen
#+EMAIL:     (concat "fniessen" at-sign "pirilampo.org")
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  en
#+OPTIONS:   H:4 num:t toc:3

#+FILETAGS:  :personal:
#+SETUPFILE: ~/.dotfiles/org/theme-readtheorg.setup

Your unofficial guide to dotfiles on GitHub:
http://dotfiles.github.io/

https://github.com/alebcay/awesome-shell

http://blog.smalleycreative.com/tutorials/using-git-and-github-to-manage-your-dotfiles/

XXX See https://wynnnetherland.com/journal/dotfiles-discovery/

* Tasks

** TODO Manage my dot-files (idempotent script + local files with branches)

http://www.anishathalye.com/2014/08/03/managing-your-dotfiles/

https://medium.com/@porteneuve/mastering-git-submodules-34c65e940407
https://deliciousbrains.com/git-submodules-manage-wordpress-themes-and-plugins/

#+begin_src shell
git submodule add -f https://github.com/fniessen/emacs-leuven.git ./plugins/emacs-leuven
git commit -m "Add Emacs-Leuven plugin"
#+end_src

** TODO Pb with dotlocalfiles

ln: failed to create symbolic link '/home/fni/.gnupg/.gnupg': File exists
ln: failed to create symbolic link '/home/fni/.subversion/.subversion': File exists

* Context

I revision-control my configuration files using Git. I have a Bash script
(called ~install~, also under the repository) which either copies or symlinks the
files to their appropriate location on a machine.

So, if I need to set up on a new machine, I just:

1. do a ~git clone~ of the repository, and
2. run my ~install~ to set up my config files in the appropriate locations.

* Installation

To install the dotfiles on a new machine, we can do so easily by cloning the
repo, and do:

#+begin_src shell
sudo apt install git
#+end_src

#+begin_note
If you try this on a brand new Windows PC, you need Cygwin installed with the
~git~ package.
#+end_note

#+begin_src shell
git clone https://github.com/fniessen/dotfiles.git ~/.dotfiles
chmod +x ~/.dotfiles/install && ~/.dotfiles/install

# Add plugins.
cd ~/.dotfiles/ && ./bin/00-setup-plugins

sudo apt install zsh
#+end_src

* Structure

- ~bin~ -- Files that are symlinked to any directory with binaries in ~$PATH~
- ~home~ -- Files that are symlinked to ~$HOME~ directory

* Install script

#+begin_src shell :tangle install :padline no
#!/usr/bin/env bash

DOTFILES="$HOME/.dotfiles"            # Base it on `pwd'!
DOTHOME="$DOTFILES/home"
DOTBACKUP="$DOTFILES/backup"

# Make a backup directory for overwritten dotfiles.
if [[ ! -e "$DOTBACKUP" ]]; then
    mkdir "$DOTBACKUP"
fi

symlinkifne() {
    echo -n "$1..."
    if [[ -e $1 ]]; then
        # File exists.
        if [[ -L $1 ]]; then
            # It's already a symlink (could have come from this project).
            echo ' symlink already exists... skipping!'
            return
        fi
        # Backup file does not exist yet.
        if [[ ! -e "$DOTBACKUP/$1" ]]; then
            mv "$1" "$DOTBACKUP/"
            echo -n ' backing up target;'
        fi
    fi
    # Create the link.
    ln -s "$DOTHOME/$1" "$1"
    echo ' symlinking... done'
}

echo "Targets in the directory: $DOTHOME"
echo "Create links in HOME directory: $HOME"

read -p "Are you sure? " -n 1 -r
echo                                    # Move to a new line.
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    exit 1
fi

# Make a backup directory for overwritten dotfiles.
if [[ ! -e "$DOTBACKUP" ]]; then
    mkdir "$DOTBACKUP"
fi

cd "$HOME" || exit 2

for config_file in $(ls --almost-all "$DOTHOME"); do
    symlinkifne "$(basename "$config_file")"
done
#+end_src

*************** TODO Avoid superfluous slash
=texmf -> /home/osboxes//.dotfiles/home/texmf/=
*************** END

* Files _local

The ~xxx_local~ files (where ~xxx~ = ~.bashrc~, ~.zshrc~ or ~.gitconfig~, for example)
contain configurations only needed on specific machines you manage.

* Custom scripts

Put your shell scripts in the ~bin/~ directory, and add the following to your
shell rc file:

#+begin_src shell
export PATH=~/.dotfiles/bin:$PATH
#+end_src

* Oh-My-Zshell

Download *Powerline-compliant fonts*: https://github.com/powerline/fonts
# - https://github.com/Lokaltog/powerline-fonts
# - https://github.com/runsisi/consolas-font-for-powerline

Install one of the following nice fonts' ~.ttf~ files into Windows:
- Powerline Consolas
- Sauce Code Powerline (Source Code Pro for Powerline)
- DejaVu Sans Mono for Powerline

* FAQ

** Bad owner or permissions on $HOME/.ssh/config

#+begin_src shell
chmod -R 600 ~/.ssh/
#+end_src

** LaTeX classes not found

Edit the ~TEXMFHOME~ line in the file reported by:

#+begin_src shell
kpsewhich texmf.cnf
#+end_src
